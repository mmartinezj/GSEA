resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
if (!file.exists(resD)){
dir.create(file.path(resD))
}
}
}
subcategory <- c("GO:BP", "GO:CC", "GO:MF", "HPO")
#Outputs
if (length(subcategory) <= 1 ){
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcategory, input_file, '/'))
if (!file.exists(resD)){
dir.create(file.path(resD))
}
} else{
i=0
for(subcat in subcategory){
i=i+1
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
if (!file.exists(resD)){
dir.create(file.path(resD))
}
}
}
if (length(subcategory) <= 1 ){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = y_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = y_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
if (length(subcategory) <= 1 ){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
length(subcategory) <= 1
if (length(subcategory) <= 1 == TRUE){
subcat_length <- length(subcategory)
if (subcat_length <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
subcat_length <- as.numeric(length(subcategory))
if (subcat_length <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
if (subcat_length <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
if (subcat_length <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for ", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
if (as.numeric(length(subcategory) <= 1){
if (as.numeric(length(subcategory)) <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for ", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
if (as.numeric(length(subcategory)) <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for ", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, "_", input_file, "_", prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
}
if (as.numeric(length(subcategory)) <= 1){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for ", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
write.table(egs_df_excel2, file = gsub(':','_', paste0(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, "_", input_file, "_", prefix,".txt", sep ="")), sep= "\t", quote = F, row.names = F)
}
}
if (category == "C5" & is.null(subcategory)){
#Write table for GOBP
C5_GOBP <- egs_df_excel2[grep("^GOBP", egs_df_excel2$Description),]
#C5_GOBP <- egs_df[str_detect(egs_df$Description, "GOBP"),] #Alternative way to extract subsets
write.table(C5_GOBP, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOBP_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for GOCC
C5_GOCC <- egs_df_excel2[grep("^GOCC", egs_df_excel2$Description),]
write.table(C5_GOCC, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOCC_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for GOMF
C5_GOMF <- egs_df_excel2[grep("^GOMF", egs_df_excel2$Description),]
write.table(C5_GOMF, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOMF_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for HP
C5_HP <- egs_df_excel2[grep("^HP", egs_df_excel2$Description),]
write.table(C5_HP, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_HP_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
#PLOTS
##Dotplot / BarPlot
if (as.numeric(length(subcategory)) <= 1 | is.null(subcategory)){
jpeg(file = paste(resD, prefix, "_dotplot.jpeg", sep =""), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
} else {
for(subcat in subcategory){
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
jpeg(file = paste(resD, prefix, subcat, "_dotplot.jpeg", sep =""), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
}
}
#PLOTS
##Dotplot / BarPlot
if (as.numeric(length(subcategory)) <= 1 | is.null(subcategory)){
jpeg(file = paste(resD, prefix, "_dotplot.jpeg", sep =""), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
} else {
for(subcat in subcategory){
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
jpeg(file = gsub(':','_', paste0(resD, prefix, subcat, "_dotplot.jpeg", sep ="")), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
}
}
if (as.numeric(length(subcategory)) <= 1 | is.null(subcategory)){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for ", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
write.table(egs_df_excel2, file = gsub(':','_', paste0(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, "_", input_file, "_", prefix,".txt", sep ="")), sep= "\t", quote = F, row.names = F)
}
if (category == "C5" & is.null(subcategory)){
#Write table for GOBP
C5_GOBP <- egs_df_excel2[grep("^GOBP", egs_df_excel2$Description),]
#C5_GOBP <- egs_df[str_detect(egs_df$Description, "GOBP"),] #Alternative way to extract subsets
write.table(C5_GOBP, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOBP_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for GOCC
C5_GOCC <- egs_df_excel2[grep("^GOCC", egs_df_excel2$Description),]
write.table(C5_GOCC, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOCC_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for GOMF
C5_GOMF <- egs_df_excel2[grep("^GOMF", egs_df_excel2$Description),]
write.table(C5_GOMF, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOMF_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for HP
C5_HP <- egs_df_excel2[grep("^HP", egs_df_excel2$Description),]
write.table(C5_HP, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_HP_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
#PLOTS
##Dotplot / BarPlot
if (as.numeric(length(subcategory)) <= 1 | is.null(subcategory)){
jpeg(file = paste(resD, prefix, "_dotplot.jpeg", sep =""), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
} else {
for(subcat in subcategory){
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
jpeg(file = gsub(':','_', paste0(resD, prefix, subcat, "_dotplot.jpeg", sep ="")), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
}
}
}
if (as.numeric(length(subcategory)) <= 1 | is.null(subcategory)){
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcategory) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
write.table(egs_df_excel2, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
} else {
for(subcat in subcategory){
print(paste0("Performing GSEA for ", subcat))
#Obtain hallmark gene sets relevant to Homo sapiens
mm_hallmark_sets <- msigdbr(species = "Homo sapiens", category = category, subcategory = subcat) %>%
dplyr::select(gs_name, ensembl_gene)
head(mm_hallmark_sets) #Check using sets
#Calculate GSEA and write tables of results
set.seed(123)
egs <- GSEA(geneList = dat_sort, pvalueCutoff = 0.05, eps = 0, pAdjustMethod = "BH", seed = T, TERM2GENE = mm_hallmark_sets)
head(egs@result)
egs_df <- data.frame(egs@result)
egs_df_excel2 <- egs_df[, 2:length(egs_df)]
#egs_df_excel <- egs_df
#names(egs_df_excel)[names(egs_df_excel) == 'ID'] <- 'Identifier'
resD0 <- paste0("results/GSEA_", statistic, "_")
resD <- gsub(':','_', paste0(resD0, category,'_', subcat, input_file, '/'))
write.table(egs_df_excel2, file = gsub(':','_', paste0(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcat, "_", input_file, "_", prefix,".txt", sep ="")), sep= "\t", quote = F, row.names = F)
print(paste0("Plotting dotplot", subcat))
jpeg(file = gsub(':','_', paste0(resD, prefix, subcat, "_dotplot.jpeg", sep ="")), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
}
if (category == "C5" & is.null(subcategory)){
#Write table for GOBP
C5_GOBP <- egs_df_excel2[grep("^GOBP", egs_df_excel2$Description),]
#C5_GOBP <- egs_df[str_detect(egs_df$Description, "GOBP"),] #Alternative way to extract subsets
write.table(C5_GOBP, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOBP_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for GOCC
C5_GOCC <- egs_df_excel2[grep("^GOCC", egs_df_excel2$Description),]
write.table(C5_GOCC, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOCC_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for GOMF
C5_GOMF <- egs_df_excel2[grep("^GOMF", egs_df_excel2$Description),]
write.table(C5_GOMF, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_C5_GOMF_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
#Write table for HP
C5_HP <- egs_df_excel2[grep("^HP", egs_df_excel2$Description),]
write.table(C5_HP, file = paste(resD, "tableGSEA_0.05_", statistic, "_ENSEMBL_", category, "_", subcategory, input_file, "_HP_",prefix,".txt", sep =""), sep= "\t", quote = F, row.names = F)
}
#PLOTS
##Dotplot / BarPlot
if (as.numeric(length(subcategory)) <= 1 | is.null(subcategory)){
jpeg(file = paste(resD, prefix, "_dotplot.jpeg", sep =""), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
} else {
for(subcat in subcategory){
print(paste0("Plotting dotplot", subcat))
jpeg(file = gsub(':','_', paste0(resD, prefix, subcat, "_dotplot.jpeg", sep ="")), units = 'in', width = 15, height = 10, res = 300)
par(mar = c(2, 2, 2, 5))
dotplot(egs, x = "GeneRatio", color = "pvalue", showCategory = 20, font.size = 15)
invisible(dev.off())
}
}
}
